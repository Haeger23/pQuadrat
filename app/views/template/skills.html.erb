<%#
required
 categories        (Hash)   A hash with categories
optional
 title             (string) Label for the input; default: Skills
 items             (Array)  An array with skill items
 name              (string) The name-attribute; default: title.downcase
%>
<% id = _id %>
<%= view("template", "control_group", {
    label: {
        title: value(:title, "Skills"),
        current: value(:current),
        name: value(:name)
    },
    controls: [{
        view: :button,
        title: "add skill",
        button_tags: {id: id},
        type: "button",
        attributes: ["default"]
    }, "<ul class='skills-list'>"
    ].concat(value(:items, []).map do |v|
      out = "<li>"
      out << view("template", "units/select", {items: categories, selected: v[:category], title: value(:title, ""), name: "skills[]"})
      out << "<input type='text' value='#{v[:skill]}' placeholder='Skill' name='skills[]' />"
      out << "<button type='button' class='btn btn-danger btn-mini'>remove</button>"
      out << "</li>"
    end).push("</ul>")
}) %>
<script>
    (function($) {
        var $button = $("#<%= id %>"),
            $list = $button.next(),
            fadeOut = function() {
                $(this).parent().fadeOut(300, function() { $(this).remove() })
            },
            autoCompleteCache = {},
            autoCompleteOptions = {
                minLength: 2,
                source: function(query, process) {
                    query = query.toLowerCase();
                    var category = this.$element.prev().children("[selected='selected']").text();
                    // category = $(this.bindings[0]).prev().children("[selected='selected']").text();

                    if(autoCompleteCache[category] === undefined) {
                        autoCompleteCache[category] = {};
                    } else if(autoCompleteCache[category][query] ) {
                        process(autoCompleteCache[category][query]);
                        return
                    }

                    $.getJSON(pSquared.baseUrl+"/skills/"+encodeURI(category), {query: query}, function(data) {
                        autoCompleteCache[category][query] = data.skills;
                        process(data.skills);
                    });
                }
            };

        $list
            .children("li")
                .children("button")
                    .click(fadeOut)
                    .end()
                .children("input")
                    .typeahead(autoCompleteOptions);

        $("#<%= id %>").click(function() {
            $("<li></li>")
                .append("<%= view("template", "units/select", {items: categories, title: value(:title, ""), name: "skills[]"}).gsub(/\r\n/, "") %>")
                .append($("<input type='text' placeholder='Skill' name='skills[]' />").autocomplete(autoCompleteOptions))
                .append($("<button type='button' class='btn btn-danger btn-mini'>remove</button>").click(fadeOut))
                .appendTo($list);
        });
    }(jQuery))
</script>