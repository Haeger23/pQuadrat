<%#
required
 categories        (Hash)   A hash with categories
optional
 title             (string) Label for the input; default: Skills
 items             (Array)  An array with skill items
 name              (string) The name-attribute; default: title.downcase
%>
<% id = _id %>
<%= view("template", "control_group", {
    label: {
        title: value(:title, "Skills"),
        current: value(:current),
        name: value(:name)
    },
    controls: [{
        view: :button,
        title: "add skill",
        button_tags: {id: id},
        type: "button",
        attributes: ["default"]
    }, "<ul class='skills-list'>"
    ].concat(value(:items, []).map do |v|
      out = "<li>"
      out << view("template", "units/select", {items: categories, selected: v[:category], title: value(:title, ""), name: "skills[]"})
      out << "<input type='text' class='skill-name' value='#{v[:skill]}' placeholder='Skill' name='skills[]' />"
      out << view("template", "units/slider", {name: "skills[]", title: "", current: v[:weight]})
      out << "<button type='button' class='btn btn-danger btn-mini'>remove</button>"
      out << "</li>"
    end).push("</ul>")
}) %>
<script>
    (function($) {
        var $button = $("#<%= id %>"),
                $list = $button.next(),
                fadeOut = function() {
                    $(this).parent().fadeOut(300, function() { $(this).remove() })
                },
                autoCompleteCache = {},
                autoCompleteOptions = {
                    minLength: 2,
                    source: function(query, process) {
                        query = query.toLowerCase();
                        var category = this.$element.prev().children("[selected='selected']").text();
                        // category = $(this.bindings[0]).prev().children("[selected='selected']").text();

                        if(autoCompleteCache[category] === undefined) {
                            autoCompleteCache[category] = {};
                        } else if(autoCompleteCache[category][query] ) {
                            process(autoCompleteCache[category][query]);
                            return
                        }

                        $.getJSON(pSquared.baseUrl+"/skills/"+encodeURI(category), {query: query}, function(data) {
                            var skills = [];
                            for(var i = 0, length = data.skills.length; i < length; i++) {
                                skills.push(data.skills[i].name)
                            }
                            autoCompleteCache[category][query] = skills;
                            process(skills);
                        });
                    }
                };

        $list
            .children("li")
            .children("button")
            .click(fadeOut)
            .end()
            .children(".skill-name")
            .typeahead(autoCompleteOptions);

        $("#<%= id %>").click(function() {
            var $input = $(" <input type='text' class='input-large'/>").hide();
            $("<li></li>")
                .append("<%= view("template", "units/select", {items: categories, title: "", name: "skills[]"}).gsub(/\r\n/, " ").gsub(/"/, '\\"') %>")
                .append($("<input type='text' placeholder='Skill' name='skills[]' class='skill-name' /> ").typeahead(autoCompleteOptions))
                .append(" <div class='input-large'></div>")
                .append("<span class='ui-slider-text'></span>")
                .append($input)
                .append($("<button type='button' class='btn btn-danger btn-mini'>remove</button>").click(fadeOut))
                .appendTo($list);

            var $span = $input.prev().text(<%= value(:current, 0) %>),
                $slider = $span.prev(),
                options = $.extend({
                    range: 'min',
                    min: 0,
                    max: 100,
                    value: <%= value(:current, 0) %>,
                    slide: function(event, ui) {
                        $input.val(ui.value);
                        $span.text(ui.value);
                    }
                });
            $slider.slider(options);


        });
    }(jQuery))
</script>